#ifndef STATICS_H
#define STATICS_H
static const char* MARBLE_OPEN_TAG = "<marble>";
static const char* MARBLE_CLOSING_TAG = "</marble>";
enum
{
    TOKEN_TYPE_NUMBER,
    TOKEN_TYPE_OPERATOR,
    TOKEN_TYPE_STRING,
    TOKEN_TYPE_IDENTIFIER,
    TOKEN_TYPE_KEYWORD,
    TOKEN_TYPE_SYMBOL
};

enum
{
    NODE_TYPE_VARIABLE_DECLARATION,
    NODE_TYPE_EXPRESSION,
    NODE_TYPE_LITERAL,
    NODE_TYPE_IDENTIFIER,
    NODE_TYPE_STRING,
    NODE_TYPE_KEYWORD,
    NODE_TYPE_FUNCTION_CALL,
    NODE_TYPE_NEGATIVE,
    NODE_TYPE_IF_STMT,
    NODE_TYPE_BODY,
    NODE_TYPE_CAST,
    NODE_TYPE_ARRAY,
    NODE_TYPE_NEW
};

enum
{
    VARIABLE_TYPE_NUMBER,
    VARIABLE_TYPE_STRING,
    VARIABLE_TYPE_OBJECT,
    VARIABLE_TYPE_ARRAY
};

enum
{
    VALUE_TYPE_NUMBER,
    VALUE_TYPE_STRING,
    VALUE_TYPE_OBJECT,
    VALUE_TYPE_ARRAY
};


enum
{
    LEFT_TO_RIGHT,
    RIGHT_TO_LEFT,
    NON_ASSOCIATIVE
};


// For the lexer
enum
{
    IS_CHARACTER,
    IS_NUMBER,
    IS_OPERATOR,
    IS_SYMBOL,
    IS_WHITESPACE
};

// Rules for the parser
enum
{
    RULE_PARSE_CASTING = 0x01,
    RULE_PARSE_ARRAY = 0x02
};

enum
{
    LOG_LEVEL_NOTICE,
    LOG_LEVEL_WARNING,
    LOG_LEVEL_ERROR
};

typedef int TOKEN_TYPE;
typedef int NODE_TYPE;
typedef int VALUE_TYPE;
typedef int LOG_TYPE;
#endif
